{"ast":null,"code":"var _jsxFileName = \"/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/src/components/email_form/index.js\";\nimport React from 'react';\nimport '../email_form/style.css';\nimport * as emailjs from 'emailjs-com';\nimport { Button, Form, FormGroup, Modal, Image } from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/BarLoader';\n\nclass Email_Form extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n      show: false\n    };\n\n    this.handleChange = (param, e) => {\n      this.setState({\n        [param]: e.target.value\n      });\n    };\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      loading: false\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n    this.setState({\n      name: ''\n    });\n    this.resetForm();\n  }\n\n  handleShow() {\n    this.setState({\n      show: true,\n      loading: false\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const _this$state = this.state,\n          email = _this$state.email,\n          subject = _this$state.subject,\n          message = _this$state.message;\n    let templateParams = {\n      from_name: email,\n      to_name: 'danndavee@gmail.com',\n      subject: subject,\n      message_html: message\n    }; //=======================\n    // Use your own API key\n    //=======================\n\n    emailjs.send('gmail', 'template_OErNDyFu', templateParams, 'user_64rGh5RuHtigw7paS8NsX').then(result => {\n      this.handleShow();\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      email: '',\n      subject: '',\n      message: '',\n      modal: false\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit.bind(this),\n      className: \"Contact-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"contact-form-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Contact Form\"), React.createElement(FormGroup, {\n      className: \"contact_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      value: this.state.email,\n      className: \"contact_input_text\",\n      onChange: this.handleChange.bind(this, 'email'),\n      placeholder: \"Email Address\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"formBasicName\",\n      className: \"contact_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      value: this.state.name,\n      onChange: this.handleChange.bind(this, 'name'),\n      placeholder: \"Your Name\",\n      className: \"contact_input_text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"formBasicSubject\",\n      className: \"contact_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      value: this.state.subject,\n      onChange: this.handleChange.bind(this, 'subject'),\n      placeholder: \"Subject\",\n      className: \"contact_input_text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"formBasicMessage\",\n      className: \"contact_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"6\",\n      value: this.state.message,\n      placeholder: \"Your text\",\n      onChange: this.handleChange.bind(this, 'message'),\n      className: \"contact_input_text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"contact-email-text-btn\",\n      variant: \"outline-light\",\n      size: \"lg\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Submit\", React.createElement(ClipLoader, {\n      size: 5 // or 150px\n      ,\n      color: \"#ffffff\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      size: \"md\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      className: \"contact_success_modal_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"contact_success_modal_img\",\n      src: \"https://icon-library.net/images/success-icon/success-icon-5.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Thank you \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.name), \"!!\"), \" \\uD83D\\uDE07\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Your message was successfully recorded\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-light\",\n      size: \"lg\",\n      onClick: this.handleClose,\n      className: \"contact-email-text-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default Email_Form;","map":{"version":3,"sources":["/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/src/components/email_form/index.js"],"names":["React","emailjs","Button","Form","FormGroup","Modal","Image","ClipLoader","Email_Form","Component","constructor","props","context","state","name","email","subject","message","show","handleChange","param","e","setState","target","value","handleShow","bind","handleClose","loading","resetForm","handleSubmit","preventDefault","templateParams","from_name","to_name","message_html","send","then","result","console","log","text","error","modal","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../email_form/style.css';\nimport * as emailjs from 'emailjs-com';\nimport { Button, Form, FormGroup, Modal, Image } from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/BarLoader';\n\nclass Email_Form extends React.Component {\n\n  constructor(props, context) {\n\t\tsuper(props, context);\n    this.handleShow = this.handleShow.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      loading: false,\n\t\t};\n\t}\n\n\thandleClose() {\n    this.setState({ show: false });\n    this.setState({ name: '' });\n    this.resetForm();\n\t}\n\n\thandleShow() {\n\t\tthis.setState({ show: true, loading: false });\n\t}\n\n  state = {\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n    show: false,\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault(); \n    this.setState({ loading: true });   \n    \n    const {email, subject, message } = this.state    \n    \n    let templateParams = {\n      from_name: email,\n      to_name: 'danndavee@gmail.com',\n      subject: subject,\n      message_html: message,\n     }\n     \n     //=======================\n     // Use your own API key\n     //=======================\n\n     emailjs.send(\n      'gmail',\n      'template_OErNDyFu',\n       templateParams,\n      'user_64rGh5RuHtigw7paS8NsX'\n     )\n     .then((result) => {\n        this.handleShow();\n        console.log(result.text);\n      }, (error) => {\n        console.log(error.text);\n      });     \n    }\n    \n    resetForm() {\n    this.setState({\n      email: '',\n      subject: '',\n      message: '',\n      modal: false,\n    })\n  }\n  \n  handleChange = (param, e) => {\n    this.setState({ [param]: e.target.value })\n  }\n  \n  render() {\n    return (\n  \n          <Form onSubmit={this.handleSubmit.bind(this)} className=\"Contact-form\">\n            <p className=\"contact-form-header\">Contact Form</p>\n             <FormGroup className=\"contact_input\">\n              <Form.Control type=\"email\" value={this.state.email} className=\"contact_input_text\" onChange={this.handleChange.bind(this, 'email')} placeholder=\"Email Address\" required/>\n             </FormGroup>\n            <FormGroup controlId=\"formBasicName\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"1\" value={this.state.name} onChange={this.handleChange.bind(this, 'name')} placeholder=\"Your Name\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicSubject\" className=\"contact_input\">\n             <Form.Control as=\"textarea\" rows=\"1\"  value={this.state.subject} onChange={this.handleChange.bind(this, 'subject')} placeholder=\"Subject\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicMessage\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"6\" value={this.state.message} placeholder=\"Your text\" onChange={this.handleChange.bind(this, 'message')} className=\"contact_input_text\" required/>\n            </FormGroup>\n           <Button className=\"contact-email-text-btn\" variant=\"outline-light\" size=\"lg\" type=\"submit\">\n              Submit\n              <ClipLoader\n                size={5} // or 150px\n                color={\"#ffffff\"}\n                loading={this.state.loading}\n              />\n            </Button>\n            \n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={this.state.show} onHide={this.handleClose}\n                centered\n              >\n              <Modal.Body className=\"contact_success_modal_body\">\n                <Image className=\"contact_success_modal_img\" src=\"https://icon-library.net/images/success-icon/success-icon-5.jpg\" />\n                <h5>Thank you <span><strong>{this.state.name}</strong>!!</span> 😇</h5>\n                <h6>Your message was successfully recorded</h6>\n                < br />\n                <Button variant=\"outline-light\" size=\"lg\" onClick={this.handleClose} className=\"contact-email-text-btn\">Close</Button>\n              </Modal.Body>\n           </Modal>\n          </Form>\n    )\n  }\n}\n\nexport default Email_Form"]},"metadata":{},"sourceType":"module"}