{"ast":null,"code":"var _jsxFileName = \"/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/src/components/project_main/index.js\";\nimport React, { Component } from 'react';\nimport '../project_main/style.css';\nimport { Col, Card, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImages, faLink } from '@fortawesome/free-solid-svg-icons';\nimport info from '../../const/project_info';\nimport Lightbox from 'react-image-lightbox';\nconsole.log(info.data);\nexport default class PM extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false,\n      image: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          photoIndex = _this$state.photoIndex,\n          isOpen = _this$state.isOpen,\n          image = _this$state.image;\n    return React.createElement(Row, {\n      xl: 12,\n      className: \"main_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, info.data.map(item => React.createElement(Col, {\n      xl: 4,\n      key: item.id,\n      className: \"card_col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card_main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      className: \"blockquote mb-0 card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, item.name), React.createElement(\"footer\", {\n      className: \"blockquote-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"built using \", React.createElement(\"strong\", {\n      title: \"Source Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item.tools))), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      onClick: () => this.setState({\n        isOpen: true,\n        image: item.image\n      }),\n      className: \"icon\",\n      size: \"lg\",\n      icon: faImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), \" \\xA0\\xA0\", item.link !== false && React.createElement(Card.Link, {\n      href: item.link,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"icon\",\n      size: \"lg\",\n      icon: faLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))), isOpen && React.createElement(Lightbox, {\n      mainSrc: image[photoIndex],\n      nextSrc: image[(photoIndex + 1) % image.length],\n      prevSrc: image[(photoIndex + image.length - 1) % image.length],\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }),\n      onMovePrevRequest: () => this.setState({\n        photoIndex: (photoIndex + image.length - 1) % image.length\n      }),\n      onMoveNextRequest: () => this.setState({\n        photoIndex: (photoIndex + 1) % image.length\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/src/components/project_main/index.js"],"names":["React","Component","Col","Card","Row","FontAwesomeIcon","faImages","faLink","info","Lightbox","console","log","data","PM","constructor","props","state","photoIndex","isOpen","image","render","map","item","id","name","tools","setState","link","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../project_main/style.css';\nimport {\n  Col,\n  Card,\n  Row,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImages, faLink} from '@fortawesome/free-solid-svg-icons';\nimport info from '../../const/project_info';\nimport Lightbox from 'react-image-lightbox';\n\nconsole.log(info.data);\n\nexport default class PM extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photoIndex: 0,\n      isOpen: false,\n      image:'',\n    };\n  }\n\n  render() {\n    const { photoIndex, isOpen, image } = this.state;\n    \n    return (\n      <Row xl={12} className=\"main_row\">\n\n      {info.data.map(item => ( \n        <Col xl={4}  key={item.id} className=\"card_col\">\n        <Card className=\"card_main\">\n          <blockquote className=\"blockquote mb-0 card-body\">\n            <h2>\n            {item.name}\n            </h2>\n            <footer className=\"blockquote-footer\">\n             built using <strong title=\"Source Title\">{item.tools}</strong>\n            </footer>\n          </blockquote>\n          <Card.Body>\n          <FontAwesomeIcon onClick={() => this.setState({ isOpen: true, image:item.image })} className=\"icon\" size=\"lg\" icon={faImages} /> &nbsp;&nbsp;\n          {\n            item.link !== false  &&\n              <Card.Link href={item.link} target=\"_blank\"><FontAwesomeIcon className=\"icon\" size=\"lg\" icon={faLink}/></Card.Link>\n          }\n        </Card.Body>\n        </Card>\n        {isOpen && (\n                <Lightbox\n                  mainSrc={image[photoIndex]}\n                  nextSrc={image[(photoIndex + 1) % image.length]}\n                  prevSrc={image[(photoIndex + image.length - 1) % image.length]}\n                  onCloseRequest={() => this.setState({ isOpen: false })}\n                  onMovePrevRequest={() =>\n                    this.setState({\n                      photoIndex: (photoIndex + image.length - 1) % image.length,\n                    })\n                  }\n                  onMoveNextRequest={() =>\n                    this.setState({\n                      photoIndex: (photoIndex + 1) % image.length,\n                    })\n                  }\n                />\n              )}\n        </Col>\n      ))}\n    </Row>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}