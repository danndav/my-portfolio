{"ast":null,"code":"import _defineProperty from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'../email_form/style.css';import*as emailjs from'emailjs-com';import{Button,Form,FormGroup,Modal,Image}from'react-bootstrap';import ClipLoader from'react-spinners/BarLoader';var Email_Form=/*#__PURE__*/function(_React$Component){_inherits(Email_Form,_React$Component);function Email_Form(props,context){var _this;_classCallCheck(this,Email_Form);_this=_possibleConstructorReturn(this,_getPrototypeOf(Email_Form).call(this,props,context));_this.state={name:'',email:'',subject:'',message:'',show:false};_this.handleChange=function(param,e){_this.setState(_defineProperty({},param,e.target.value));};_this.handleShow=_this.handleShow.bind(_assertThisInitialized(_this));_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));_this.state={show:false,loading:false};return _this;}_createClass(Email_Form,[{key:\"handleClose\",value:function handleClose(){this.setState({show:false});this.setState({name:''});this.resetForm();}},{key:\"handleShow\",value:function handleShow(){this.setState({show:true,loading:false});}},{key:\"handleSubmit\",value:function handleSubmit(e){var _this2=this;e.preventDefault();this.setState({loading:true});var _this$state=this.state,email=_this$state.email,subject=_this$state.subject,message=_this$state.message;var templateParams={from_name:email,to_name:'danndavee@gmail.com',subject:subject,message_html:message};//=======================\n// Use your own API key\n//=======================\nemailjs.send('gmail','template_OErNDyFu',templateParams,'user_64rGh5RuHtigw7paS8NsX').then(function(result){_this2.handleShow();console.log(result.text);},function(error){console.log(error.text);});}},{key:\"resetForm\",value:function resetForm(){this.setState({email:'',subject:'',message:'',modal:false});}},{key:\"render\",value:function render(){return React.createElement(Form,{onSubmit:this.handleSubmit.bind(this),className:\"Contact-form\"},React.createElement(\"p\",{className:\"contact-form-header\"},\"Contact Form\"),React.createElement(FormGroup,{className:\"contact_input\"},React.createElement(Form.Control,{type:\"email\",value:this.state.email,className:\"contact_input_text\",onChange:this.handleChange.bind(this,'email'),placeholder:\"Email Address\",required:true})),React.createElement(FormGroup,{controlId:\"formBasicName\",className:\"contact_input\"},React.createElement(Form.Control,{as:\"textarea\",rows:\"1\",value:this.state.name,onChange:this.handleChange.bind(this,'name'),placeholder:\"Your Name\",className:\"contact_input_text\",required:true})),React.createElement(FormGroup,{controlId:\"formBasicSubject\",className:\"contact_input\"},React.createElement(Form.Control,{as:\"textarea\",rows:\"1\",value:this.state.subject,onChange:this.handleChange.bind(this,'subject'),placeholder:\"Subject\",className:\"contact_input_text\",required:true})),React.createElement(FormGroup,{controlId:\"formBasicMessage\",className:\"contact_input\"},React.createElement(Form.Control,{as:\"textarea\",rows:\"6\",value:this.state.message,placeholder:\"Your text\",onChange:this.handleChange.bind(this,'message'),className:\"contact_input_text\",required:true})),React.createElement(Button,{className:\"contact-email-text-btn\",variant:\"outline-light\",size:\"lg\",type:\"submit\"},\"Submit\",React.createElement(ClipLoader,{size:5// or 150px\n,color:\"#ffffff\",loading:this.state.loading})),React.createElement(Modal,{size:\"md\",\"aria-labelledby\":\"contained-modal-title-vcenter\",show:this.state.show,onHide:this.handleClose,centered:true},React.createElement(Modal.Body,{className:\"contact_success_modal_body\"},React.createElement(Image,{className:\"contact_success_modal_img\",src:\"https://icon-library.net/images/success-icon/success-icon-5.jpg\"}),React.createElement(\"h5\",null,\"Thank you \",React.createElement(\"span\",null,React.createElement(\"strong\",null,this.state.name),\"!!\"),\" \\uD83D\\uDE07\"),React.createElement(\"h6\",null,\"Your message was successfully recorded\"),React.createElement(\"br\",null),React.createElement(Button,{variant:\"outline-light\",size:\"lg\",onClick:this.handleClose,className:\"contact-email-text-btn\"},\"Close\"))));}}]);return Email_Form;}(React.Component);export default Email_Form;","map":{"version":3,"sources":["/Users/danieldavid/Downloads/daniel David/my Playing Ground/Portfolio-2020/src/components/email_form/index.js"],"names":["React","emailjs","Button","Form","FormGroup","Modal","Image","ClipLoader","Email_Form","props","context","state","name","email","subject","message","show","handleChange","param","e","setState","target","value","handleShow","bind","handleClose","loading","resetForm","preventDefault","templateParams","from_name","to_name","message_html","send","then","result","console","log","text","error","modal","handleSubmit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../email_form/style.css';\nimport * as emailjs from 'emailjs-com';\nimport { Button, Form, FormGroup, Modal, Image } from 'react-bootstrap';\nimport ClipLoader from 'react-spinners/BarLoader';\n\nclass Email_Form extends React.Component {\n\n  constructor(props, context) {\n\t\tsuper(props, context);\n    this.handleShow = this.handleShow.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      loading: false,\n\t\t};\n\t}\n\n\thandleClose() {\n    this.setState({ show: false });\n    this.setState({ name: '' });\n    this.resetForm();\n\t}\n\n\thandleShow() {\n\t\tthis.setState({ show: true, loading: false });\n\t}\n\n  state = {\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n    show: false,\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault(); \n    this.setState({ loading: true });   \n    \n    const {email, subject, message } = this.state    \n    \n    let templateParams = {\n      from_name: email,\n      to_name: 'danndavee@gmail.com',\n      subject: subject,\n      message_html: message,\n     }\n     \n     //=======================\n     // Use your own API key\n     //=======================\n\n     emailjs.send(\n      'gmail',\n      'template_OErNDyFu',\n       templateParams,\n      'user_64rGh5RuHtigw7paS8NsX'\n     )\n     .then((result) => {\n        this.handleShow();\n        console.log(result.text);\n      }, (error) => {\n        console.log(error.text);\n      });     \n    }\n    \n    resetForm() {\n    this.setState({\n      email: '',\n      subject: '',\n      message: '',\n      modal: false,\n    })\n  }\n  \n  handleChange = (param, e) => {\n    this.setState({ [param]: e.target.value })\n  }\n  \n  render() {\n    return (\n  \n          <Form onSubmit={this.handleSubmit.bind(this)} className=\"Contact-form\">\n            <p className=\"contact-form-header\">Contact Form</p>\n             <FormGroup className=\"contact_input\">\n              <Form.Control type=\"email\" value={this.state.email} className=\"contact_input_text\" onChange={this.handleChange.bind(this, 'email')} placeholder=\"Email Address\" required/>\n             </FormGroup>\n            <FormGroup controlId=\"formBasicName\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"1\" value={this.state.name} onChange={this.handleChange.bind(this, 'name')} placeholder=\"Your Name\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicSubject\" className=\"contact_input\">\n             <Form.Control as=\"textarea\" rows=\"1\"  value={this.state.subject} onChange={this.handleChange.bind(this, 'subject')} placeholder=\"Subject\" className=\"contact_input_text\" required />\n            </FormGroup>\n            <FormGroup controlId=\"formBasicMessage\" className=\"contact_input\">\n              <Form.Control as=\"textarea\" rows=\"6\" value={this.state.message} placeholder=\"Your text\" onChange={this.handleChange.bind(this, 'message')} className=\"contact_input_text\" required/>\n            </FormGroup>\n           <Button className=\"contact-email-text-btn\" variant=\"outline-light\" size=\"lg\" type=\"submit\">\n              Submit\n              <ClipLoader\n                size={5} // or 150px\n                color={\"#ffffff\"}\n                loading={this.state.loading}\n              />\n            </Button>\n            \n            <Modal\n                size=\"md\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                show={this.state.show} onHide={this.handleClose}\n                centered\n              >\n              <Modal.Body className=\"contact_success_modal_body\">\n                <Image className=\"contact_success_modal_img\" src=\"https://icon-library.net/images/success-icon/success-icon-5.jpg\" />\n                <h5>Thank you <span><strong>{this.state.name}</strong>!!</span> 😇</h5>\n                <h6>Your message was successfully recorded</h6>\n                < br />\n                <Button variant=\"outline-light\" size=\"lg\" onClick={this.handleClose} className=\"contact-email-text-btn\">Close</Button>\n              </Modal.Body>\n           </Modal>\n          </Form>\n    )\n  }\n}\n\nexport default Email_Form"]},"metadata":{},"sourceType":"module"}