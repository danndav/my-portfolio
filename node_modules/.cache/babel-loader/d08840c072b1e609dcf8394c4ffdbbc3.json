{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import'../project_card_details/style.css';import{Col,Row,Card,Button,Image}from'react-bootstrap';import{CopyToClipboard}from'react-copy-to-clipboard';import{ToastsContainer,ToastsStore}from'react-toasts';import GitLogo from\"../../assets/img/git.svg\";var PCD=function PCD(){var _useState=useState(false),_useState2=_slicedToArray(_useState,1),setErrors=_useState2[0];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),git=_useState4[0],setGit=_useState4[1];function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.github.com/users/motasimfoad/repos\");case 2:res=_context.sent;res.json().then(function(res){return setGit(res);}).catch(function(err){return setErrors(err);});case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}useEffect(function(){fetchData();});return React.createElement(Row,null,git.map(function(item){return React.createElement(Col,{xl:6,key:item.id},React.createElement(Card,{className:\"pro_card\"},React.createElement(Row,null,React.createElement(Col,{xl:12,className:\"project_img_container\"},React.createElement(Image,{className:\"project_card_left_img\",src:GitLogo})),React.createElement(Col,{xl:12},React.createElement(Card.Title,{className:\"repoName\"},\"Name: \",item.name),React.createElement(Card.Subtitle,{className:\"repoInfo\"},\"Location: \",item.full_name,\" \",React.createElement(\"br\",null),\"Created: \",item.created_at,\" \",React.createElement(\"br\",null),\"Updated: \",item.updated_at),React.createElement(Card.Body,{className:\"project_card_main\"},React.createElement(Button,{variant:\"outline-light\",size:\"lg\",className:\"modal-exit-btn about_modal\"},React.createElement(CopyToClipboard,{text:item.ssh_url,onCopy:function onCopy(){return ToastsStore.info(\"SSH url copied to clipboard 🤩😍\");}},React.createElement(\"span\",null,\"SSH\"))),React.createElement(Button,{variant:\"outline-light\",size:\"lg\",className:\"modal-exit-btn about_modal\"},React.createElement(CopyToClipboard,{text:item.clone_url,onCopy:function onCopy(){return ToastsStore.info(\"HTTPS url copied to clipboard 👍😬\");}},React.createElement(\"span\",null,\"HTTPS\"))),React.createElement(Button,{variant:\"outline-light\",size:\"lg\",className:\"modal-exit-btn about_modal\"},React.createElement(\"a\",{href:item.svn_url,style:{textDecoration:'none',color:'white'},target:\"_blank\",rel:\"noopener noreferrer\"},\"VIEW\")),React.createElement(ToastsContainer,{store:ToastsStore,timer:\"10000\"}))))));}));};export default PCD;","map":{"version":3,"sources":["/Users/dandave/Documents/daniel David/my Playing Ground/Portfolio-2020/src/components/project_card_details/index.js"],"names":["React","useState","useEffect","Col","Row","Card","Button","Image","CopyToClipboard","ToastsContainer","ToastsStore","PCD","setErrors","git","setGit","fetchData","fetch","res","json","then","catch","err","map","item","id","GitLogo","name","full_name","created_at","updated_at","ssh_url","info","clone_url","svn_url","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../project_card_details/style.css';\nimport {\n  Col,\n  Row,\n  Card,\n  Button,\n  Image\n} from 'react-bootstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\nimport GitLogo from '../../assets/img/git.svg';\n\nconst PCD = () => {\n  const [setErrors] = useState(false);\n  const [git, setGit] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\"https://api.github.com/users/motasimfoad/repos\");\n    res\n      .json()\n      .then(res => setGit(res))\n      .catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n  \n  return (\n    <Row >\n     {git.map(item => (\n       <Col xl={6} key = {item.id}>\n            <Card className=\"pro_card\">\n            <Row >\n              <Col xl={12} className=\"project_img_container\">\n              <Image className=\"project_card_left_img\" src={GitLogo}/>\n              </Col>\n            <Col xl={12}>\n              <Card.Title className=\"repoName\">\n               Name: {item.name} \n              </Card.Title>\n              <Card.Subtitle className=\"repoInfo\">\n                Location: {item.full_name} <br/>\n                Created: {item.created_at} <br/>\n                Updated: {item.updated_at} \n              </Card.Subtitle>\n            <Card.Body className=\"project_card_main\">\n              <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\">\n                    <CopyToClipboard text={item.ssh_url}\n                      onCopy={() => ToastsStore.info(\"SSH url copied to clipboard 🤩😍\")}>\n                      <span>SSH</span>\n                    </CopyToClipboard>  \n                  </Button>\n                  <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\">\n                    <CopyToClipboard text={item.clone_url}\n                      onCopy={() => ToastsStore.info(\"HTTPS url copied to clipboard 👍😬\")}>\n                      <span>HTTPS</span>\n                    </CopyToClipboard>  \n                  </Button>\n                  <Button variant=\"outline-light\" size=\"lg\" className=\"modal-exit-btn about_modal\"> \n                  <a href={item.svn_url} style={{ textDecoration: 'none', color: 'white' }} target=\"_blank\" rel=\"noopener noreferrer\">VIEW</a>\n                  </Button>\n                  <ToastsContainer store={ToastsStore} timer = '10000' />\n            </Card.Body>\n            </Col>\n            </Row>\n            </Card>\n           </Col>\n          ))\n          }\n    </Row>\n  );\n};\nexport default PCD;\n"]},"metadata":{},"sourceType":"module"}